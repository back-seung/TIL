package iterator;import stackAndQueue.MyVector;import java.util.Iterator;public class MyVector2 extends MyVector implements Iterator {    int cursor = 0;    int lastRet = -1;    public MyVector2(int capacity) {        super(capacity);    }    public MyVector2() {        this(10);    }    public String toString() {        String temp = "";        Iterator iterator = iterator();        for (int i = 0; iterator.hasNext(); i++) {            if (i != 0) {                temp += ", ";                temp += iterator.next();            }        }        return "[" + temp + "]";    }    public Iterator iterator() {        cursor = 0;        lastRet = -1;        return this;    }    @Override    public boolean hasNext() {        return cursor != size();    }    @Override    public Object next() {        Object next = get(cursor);        lastRet = cursor++;        return next;    }    @Override    public void remove() {        // 더 이상 삭제할 것이 없으면 IllegalStateException 발생        if (lastRet == -1) {            throw new IllegalStateException();        } else {            remove(lastRet);            cursor--;            lastRet = -1;        }    }}