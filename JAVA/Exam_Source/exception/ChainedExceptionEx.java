package exception;public class ChainedExceptionEx {    public static void main(String[] args) {        try {            install();        } catch (InstallException e) {            e.printStackTrace();        } catch (Exception e) {            e.printStackTrace();        }    }    static void install() throws InstallException {        try {            startInstall();            copyFiles();        } catch (SpaceException e) {            InstallException ie = new InstallException("설치 중 예외 발생");            ie.initCause(e);            throw ie;        } catch (MemoryException e) {            InstallException ie = new InstallException("설치 중 예외 발생");            ie.initCause(e);            throw ie;        } finally {            deleteTempFiles();        }    }    static void startInstall() throws SpaceException, MemoryException {        if (!isEnoughSpace()) {       // 충분한 설치 공간이 없을 때            throw new SpaceException("설치할 공간이 부족합니다.");        }        if (!isEnoughMemory()) {        // 충분한 메모리가 없을 때            throw new MemoryException("메모리가 부족합니다.");//            throw new RuntimeException(new MemoryException("메모리가 부족합니다."));        }    } // static 메서드의 끝    static void copyFiles() { /* 파일들을 복사하는 코드를 적음 */ }    static void deleteTempFiles() { /* 임시파일들을 삭제하는 코드를 적음 */ }    static boolean isEnoughSpace() {        // 설치하는데 필요한 공간이 있는지 확인하는 코드를 적음        return false;    }    static boolean isEnoughMemory() {        // 메모리가 충분한지 확인하는 코드를 적음        return true;    }    static class MemoryException extends Exception {        MemoryException(String msg) {            super(msg);        }    }    static class SpaceException extends Exception {        SpaceException(String msg) {            super(msg);        }    }    static class InstallException extends Exception {        InstallException(String msg) {            super(msg);        }    }}