package oop.inheritance;import java.lang.reflect.InvocationTargetException;public class Deck {    final int CARD_NUM = 52;    Card cardArr[] = new Card[CARD_NUM];    public Deck() {        int i = 0;        for (int k = Card.KIND_MAX; k > 0; k--) {            for (int j = 0; j < Card.NUM_MAX; j++) {                cardArr[i++] = new Card(k, j + 1);            }        }    }    Card pick(int index) {        return cardArr[index];    }    Card pick() {        int index = (int) (Math.random() * CARD_NUM);        return pick(index);    }    void shuffle() {        for (int i = 0; i < cardArr.length; i++) {            int r = (int) (Math.random() * CARD_NUM);            Card temp = cardArr[i];            cardArr[i] = cardArr[r];            cardArr[r] = temp;        }    }}