package week_11;abstract class MyEnum<T extends MyEnum<T>> implements Comparable<T> {    static int id = 0; // 객체에 붙힐 일련번호    int ordinal;    String name = "";    public int ordinal() {        return ordinal;    }    MyEnum(String name) {        this.name = name;        ordinal = id++; // 객체를 생성할 때 마다 id의 값을 증가시킨다.    }    public int compareTo(T t) {        return ordinal - t.ordinal(); // 에러. 타입 T에 ordinal이 있나?    }}abstract class MyTranspotation extends MyEnum {    static final MyTranspotation BUS = new MyTranspotation("BUS", 100) {        int fare(int distance) {            return distance * BASIC_FARE;        }    };    static final MyTranspotation TRAIN = new MyTranspotation("TRAIN", 150) {        int fare(int distance) {            return distance * BASIC_FARE;        }    };    static final MyTranspotation SHIP = new MyTranspotation("SHIP", 100) {        int fare(int distance) {            return distance * BASIC_FARE;        }    };    static final MyTranspotation AIRPLANE = new MyTranspotation("AIRPLANE", 300) {        int fare(int distance) {            return distance * BASIC_FARE;        }    };    @Override    public int compareTo(Object o) {        return 0;    }    abstract int fare(int distance);    protected final int BASIC_FARE;    private MyTranspotation(String name, int basicFare) {        super(name);        BASIC_FARE = basicFare;    }    public String name;    @Override    public String toString() {        return "MyTranspotation{" +                "BASIC_FARE=" + BASIC_FARE +                ", name='" + name + '\'' +                '}';    }}class EnumEx4 {    public static void main(String[] args) {        MyTranspotation t1 = MyTranspotation.BUS;        MyTranspotation t2 = MyTranspotation.BUS;        MyTranspotation t3 = MyTranspotation.TRAIN;        MyTranspotation t4 = MyTranspotation.SHIP;        MyTranspotation t5 = MyTranspotation.AIRPLANE;        System.out.printf("t1=%s, %d%n", t1.name, t1.ordinal());        System.out.printf("t2=%s, %d%n", t2.name, t2.ordinal());        System.out.printf("t3=%s, %d%n", t3.name, t3.ordinal());        System.out.printf("t4=%s, %d%n", t4.name, t4.ordinal());        System.out.printf("t5=%s, %d%n", t5.name, t5.ordinal());        System.out.println("t1 == t2 ? " + (t1 == t2));        System.out.println("t1.compareTo(t3) = " + t1.compareTo(t3));    }}